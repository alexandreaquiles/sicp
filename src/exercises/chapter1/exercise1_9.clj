(ns exercises.chapter1.exercise1_9)

;Exercise 1.9.  Each of the following two procedures defines a method for adding two positive integers in terms of the procedures inc, which increments its argument by 1, and dec, which decrements its argument by 1.
;
;(define (+ a b)
;  (if (= a 0)
;      b
;      (inc (+ (dec a) b))))
;
;(define (+ a b)
;  (if (= a 0)
;      b
;      (+ (dec a) (inc b))))
;
;Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4 5). Are these processes iterative or recursive?

;Translating to Clojure
(defn sum [a b]
  (if (= a 0)
    b
    (inc (sum (dec a) b))))

; substitution model (applicative-order evaluation)
(sum 4 5)
;(if (= a 0) b (inc (sum (dec a) b)))
;(if (= 4 0) 5 (inc (sum (dec 4) 5)))
;(if  false  5 (inc (sum (dec 4) 5)))
;(if  false  5 (inc (sum    3    5)))
;(if  false  5 (inc (if (= a 0) b (inc (sum (dec a) b)))))
;(if  false  5 (inc (if (= 3 0) 5 (inc (sum (dec 3) 5)))))
;(if  false  5 (inc (if  false  5 (inc (sum   2     5)))))
;(if  false  5 (inc (if  false  5 (inc (if (= a 0) b (inc (sum (dec a) b)))))))
;(if  false  5 (inc (if  false  5 (inc (if (= 2 0) 5 (inc (sum (dec 2) 5)))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (sum (dec 2) 5)))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (sum    1    5)))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if (= a 0) b (inc (sum (dec a) b)))))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if (= 1 0) 5 (inc (sum (dec 1) 5)))))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (sum (dec 1) 5)))))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (sum    0    5)))))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if (= a 0) b (inc (sum (dec a) b)))))))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if (= 0 0) 5 (inc (sum (dec 0) 5)))))))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if   true  5 (inc (sum (dec 0) 5)))))))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if  false  5 (inc 5))))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc (if  false  5 6)))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 (inc 6))))))
;(if  false  5 (inc (if  false  5 (inc (if  false  5 7)))))
;(if  false  5 (inc (if  false  5 (inc 7))))
;(if  false  5 (inc (if  false  5 8)))
;(if  false  5 (inc 8))
;(if  false  5 9)
;9

;This is a RECURSIVE PROCESS


(defn sum [a b]
  (if (= a 0)
    b
    (sum (dec a) (inc b))))

; substitution model (applicative-order evaluation)
(sum 4 5)
;(if (= a 0) b (sum (dec a) (inc b)))
;(if (= 4 0) 5 (sum (dec 4) (inc 5)))
;(if  false  5 (sum (dec 4) (inc 5)))
;(if  false  5 (sum    3    (inc 5)))
;(if  false  5 (sum    3       6   ))
;(if  false  5 (if (= a 0) b (sum (dec a) (inc b))))
;(if  false  5 (if (= 3 0) 6 (sum (dec 3) (inc 6))))
;(if  false  5 (if  false  6 (sum (dec 3) (inc 6))))
;(if  false  5 (if  false  6 (sum    2    (inc 6))))
;(if  false  5 (if  false  6 (sum    2       7   )))
;(if  false  5 (if  false  6 (if (= a 0) b (sum (dec a) (inc b)))))
;(if  false  5 (if  false  6 (if (= 2 0) 7 (sum (dec 2) (inc 7)))))
;(if  false  5 (if  false  6 (if  false  7 (sum (dec 2) (inc 7)))))
;(if  false  5 (if  false  6 (if  false  7 (sum    1    (inc 7)))))
;(if  false  5 (if  false  6 (if  false  7 (sum    1       8   ))))
;(if  false  5 (if  false  6 (if  false  7 (if (= a 0) b (sum (dec a) (inc b))))))
;(if  false  5 (if  false  6 (if  false  7 (if (= 1 0) 8 (sum (dec 1) (inc 8))))))
;(if  false  5 (if  false  6 (if  false  7 (if  false  8 (sum (dec 1) (inc 8))))))
;(if  false  5 (if  false  6 (if  false  7 (if  false  8 (sum     0   (inc 8))))))
;(if  false  5 (if  false  6 (if  false  7 (if  false  8 (sum     0      9   )))))
;(if  false  5 (if  false  6 (if  false  7 (if  false  8 (if (= a 0) b (sum (dec a) (inc b)))))))
;(if  false  5 (if  false  6 (if  false  7 (if  false  8 (if (= 0 0) 9 (sum (dec 0) (inc 9)))))))
;(if  false  5 (if  false  6 (if  false  7 (if  false  8 (if   true  9 (sum (dec 0) (inc 9)))))))
;(if  false  5 (if  false  6 (if  false  7 (if  false  8             9                       ))))
;(if  false  5 (if  false  6 (if  false  7                           9                        )))
;(if  false  5 (if  false  6                                         9                         ))
;(if  false  5                                                       9                          )
;                                                                    9
;This is an ITERATIVE PROCESS
