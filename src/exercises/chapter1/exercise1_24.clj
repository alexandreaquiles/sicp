(ns exercises.chapter1.exercise1_24)

;Exercise 1.24:
; Modify the timed-prime-test procedure of Exercise 1.22 to use fast-prime? (the Fermat method), and
;   test each of the 12 primes you found in that exercise.
; Since the Fermat test has Θ(log n) growth, how would you expect the time to test primes near 1,000,000
;   to compare with the time needed to test primes near 1000?
; Do your data bear this out? Can you explain any discrepancy you find?

(defn square [x] (* x x))

(defn rand-long [n]
  (long (rand n)))

(defn expmod [base exp m]
  (cond (= exp 0) 1
        (even? exp) (rem (square (expmod base (/ exp 2) m)) m)
        :else (rem (* base (expmod base (- exp 1) m)) m)))

(defn fermat-test [n]
  (defn try-it [a]
    (= (expmod a n n) a))
  (try-it (+ 1 (rand-long (- n 1)))))

(defn fast-prime? [n times]
  (cond (= times 0) true
        (fermat-test n) (fast-prime? n (- times 1))
        :else false))

(defn report-prime [elapsed-time]
  (print " *** ")
  (println (/ elapsed-time 1000.0) "μs")
  true)
(defn start-prime-test [n start-time]
  (if (fast-prime? n 100)
    (report-prime (- (System/nanoTime) start-time))))
(defn timed-prime-test [n]
  (newline)
  (print n)
  (start-prime-test n (System/nanoTime)))

;(timed-prime-test 1999)
;=> 1999 *** 161.063 μs

(defn search-for-primes [min]
  (loop [counter 1 min min]
    (if (<= counter 3)
      (let [odd-min (if (odd? min) min (inc min))
            was-prime (timed-prime-test odd-min)
            new-counter (if was-prime (inc counter) counter)]
        (recur new-counter (inc odd-min))))))

(search-for-primes 10000)
;10001
;10003
;10005
;10007 *** 1044.569 μs
;
;10009 *** 1086.264 μs
;
;10011
;10013
;10015
;10017
;10019
;10021
;10023
;10025
;10027
;10029
;10031
;10033
;10035
;10037 *** 737.477 μs

(search-for-primes 100000)
;100001
;100003 *** 1275.636 μs
;
;100005
;100007
;100009
;100011
;100013
;100015
;100017
;100019 *** 1203.493 μs
;
;100021
;100023
;100025
;100027
;100029
;100031
;100033
;100035
;100037
;100039
;100041
;100043 *** 1343.879 μs

(search-for-primes 1000000)
;1000001
;1000003 *** 650.196 μs
;
;1000005
;1000007
;1000009
;1000011
;1000013
;1000015
;1000017
;1000019
;1000021
;1000023
;1000025
;1000027
;1000029
;1000031
;1000033 *** 995.118 μs
;
;1000035
;1000037 *** 1208.978 μs

;t₁₀₀₀₀   ~= 956.1033333333331
;t₁₀₀₀₀₀  ~= 1274.336
;t₁₀₀₀₀₀₀ ~= 951.4306666666666

; O(log 1000) x ~= number of digits ~= 3 x
; But t₁₀₀₀₀₀₀ is 0.9951128016148884 of t₁₀₀₀₀
; ???

;Let's test with larger numbers, as we did with Exercises 1.22 and 1.23.

;When tested with 10¹³, got the error:
; Execution error (IllegalArgumentException) at exercises.chapter1.exercise1-24/fermat-test (exercise1_24.clj:4).
;   Value out of range for int: 2714091472479
;The problem was with rand-int
;I created a rand-long, based in this StackOverflow answer: https://stackoverflow.com/a/35250042
;Then I got
; Execution error (ArithmeticException) at exercises.chapter1.exercise1-24/square (exercise1_24.clj:10).
;    integer overflow
;The problem was with square
;So, I changed those large numbers to use BigInt

(search-for-primes 10000000000000N)
;10000000000001N
;10000000000003N
;10000000000005N
;10000000000007N
;10000000000009N
;10000000000011N
;10000000000013N
;10000000000015N
;10000000000017N
;10000000000019N
;10000000000021N
;10000000000023N
;10000000000025N
;10000000000027N
;10000000000029N
;10000000000031N
;10000000000033N
;10000000000035N
;10000000000037N *** 2986.48 μs
;
;10000000000039N
;10000000000041N
;10000000000043N
;10000000000045N
;10000000000047N
;10000000000049N
;10000000000051N *** 3034.849 μs
;
;10000000000053N
;10000000000055N
;10000000000057N
;10000000000059N
;10000000000061N
;10000000000063N
;10000000000065N
;10000000000067N
;10000000000069N
;10000000000071N
;10000000000073N
;10000000000075N
;10000000000077N
;10000000000079N
;10000000000081N
;10000000000083N
;10000000000085N
;10000000000087N
;10000000000089N
;10000000000091N
;10000000000093N
;10000000000095N
;10000000000097N
;10000000000099N *** 5265.865 μs

(search-for-primes 100000000000000N)
;100000000000001N
;100000000000003N
;100000000000005N
;100000000000007N
;100000000000009N
;100000000000011N
;100000000000013N
;100000000000015N
;100000000000017N
;100000000000019N
;100000000000021N
;100000000000023N
;100000000000025N
;100000000000027N
;100000000000029N
;100000000000031N *** 22281.107 μs
;
;100000000000033N
;100000000000035N
;100000000000037N
;100000000000039N
;100000000000041N
;100000000000043N
;100000000000045N
;100000000000047N
;100000000000049N
;100000000000051N
;100000000000053N
;100000000000055N
;100000000000057N
;100000000000059N
;100000000000061N
;100000000000063N
;100000000000065N
;100000000000067N *** 12412.742 μs
;
;100000000000069N
;100000000000071N
;100000000000073N
;100000000000075N
;100000000000077N
;100000000000079N
;100000000000081N
;100000000000083N
;100000000000085N
;100000000000087N
;100000000000089N
;100000000000091N
;100000000000093N
;100000000000095N
;100000000000097N *** 11871.159 μs

(search-for-primes 1000000000000000N)
;1000000000000001N
;1000000000000003N
;1000000000000005N
;1000000000000007N
;1000000000000009N
;1000000000000011N
;1000000000000013N
;1000000000000015N
;1000000000000017N
;1000000000000019N
;1000000000000021N
;1000000000000023N
;1000000000000025N
;1000000000000027N
;1000000000000029N
;1000000000000031N
;1000000000000033N
;1000000000000035N
;1000000000000037N *** 18032.352 μs
;
;1000000000000039N
;1000000000000041N
;1000000000000043N
;1000000000000045N
;1000000000000047N
;1000000000000049N
;1000000000000051N
;1000000000000053N
;1000000000000055N
;1000000000000057N
;1000000000000059N
;1000000000000061N
;1000000000000063N
;1000000000000065N
;1000000000000067N
;1000000000000069N
;1000000000000071N
;1000000000000073N
;1000000000000075N
;1000000000000077N
;1000000000000079N
;1000000000000081N
;1000000000000083N
;1000000000000085N
;1000000000000087N
;1000000000000089N
;1000000000000091N *** 8497.911 μs
;
;1000000000000093N
;1000000000000095N
;1000000000000097N
;1000000000000099N
;1000000000000101N
;1000000000000103N
;1000000000000105N
;1000000000000107N
;1000000000000109N
;1000000000000111N
;1000000000000113N
;1000000000000115N
;1000000000000117N
;1000000000000119N
;1000000000000121N
;1000000000000123N
;1000000000000125N
;1000000000000127N
;1000000000000129N
;1000000000000131N
;1000000000000133N
;1000000000000135N
;1000000000000137N
;1000000000000139N
;1000000000000141N
;1000000000000143N
;1000000000000145N
;1000000000000147N
;1000000000000149N
;1000000000000151N
;1000000000000153N
;1000000000000155N
;1000000000000157N
;1000000000000159N *** 6278.727 μs

; t10¹³ (avg) = 3762.3979999999997
; t10¹⁴ (avg) = 15521.669333333333
; t10¹⁵ (avg) = 10936.33

; t10¹⁴ / t10¹³ = 4.1254724602057875
; t10¹⁵ / t10¹⁴ = 0.7045846529222115 (???)

;t10¹⁵/t10¹³ = 2.9067445815142365 (very close to 3)
